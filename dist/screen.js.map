{"version":3,"file":"screen.js","sourceRoot":"","sources":["../src/screen.ts"],"names":[],"mappings":"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","sourcesContent":["import { Orientation } from './model/orientation.model';\nimport { SyncOptions } from './model/sync-options.model';\n\n\nexport class Screen { \n\n  private elements = new Map<HTMLElement, SyncOptions>();\n  private current = {\n    width: document.body.clientWidth,\n    orientation: Orientation.landscape as Orientation | undefined,\n    size: 'md',\n    sizing: { } as { [size: string]: number },\n  };\n\n  /**\n   * Available size list.\n   */\n  sizes: string[] = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n  /**\n   * Current screen width.\n   */\n  get size() { \n    return this.current.size;\n  }\n\n  /**\n   * Reference CSS as text.\n   */\n  styles = `\n    :root {\n      --screen-xs: 576px;\n      --screen-sm: 768px;\n      --screen-md: 992px;\n      --screen-lg: 1140px;\n      --screen-xl: 99999px;\n    }\n    [hidden] { display: none !important }\n    .screen-xs [hidden-xs], .screen-xs[hidden-xs] { display: none !important }\n    .screen-sm [hidden-sm], .screen-sm[hidden-sm] { display: none !important }\n    .screen-md [hidden-md], .screen-md[hidden-md] { display: none !important }\n    .screen-lg [hidden-lg], .screen-lg[hidden-lg] { display: none !important }\n    .screen-xl [hidden-xl], .screen-xl[hidden-xl] { display: none !important }\n    .no-pad { padding: 0 }\n    .no-margin { margin: 0 }\n    .no-border { border: 0 }\n    .no-scroll, .no-scroll *:not(.yes-scroll) {\n      overscroll-behavior: none !important;\n      overflow: hidden !important;\n    }\n  `;\n\n\n  constructor() {\n\n    window.addEventListener('resize', () => {\n      this.trackWidth();\n      this.update();\n    });\n\n    window.screen.orientation.addEventListener('change', () => {\n      this.trackOrientation();\n      this.update();\n    });\n\n  }\n\n  init() { \n    this.initializeSizing();\n    this.trackWidth();\n    this.trackOrientation();\n  }\n\n  private initializeSizing(): void { \n    for (const size of this.sizes) {\n      this.current.sizing[size] = this.getSizeFromCss(size);\n    }\n  }\n\n  private getSizeFromCss(size: string): number { \n    return parseInt(getComputedStyle(document.body).getPropertyValue(`--screen-${size}`).replace('px', ''));\n  }\n\n  private trackWidth() { \n    this.current.width = document.body.clientWidth;\n    for (const size of this.sizes) { \n      if (this.current.width < this.current.sizing[size]) {\n        this.current.size = size;\n        break;\n      }\n    }\n  }\n\n  private trackOrientation() { \n\n    const landscape = ['landscape', 'landscape-primary', 'landscape-secondary'];\n    if (landscape.indexOf(window.screen.orientation.type) > -1) { \n      this.current.orientation = Orientation.landscape;\n      return\n    }\n\n    const portrait = ['portrait', 'portrait-primary', 'portrait-secondary'];\n    if (portrait.indexOf(window.screen.orientation.type) > -1) { \n      this.current.orientation = Orientation.portrait;\n      return;\n    }\n\n    this.current.orientation = undefined;\n\n  }\n\n  /**\n   * Return true if the current width matches the size.\n   * @param size \n   * @returns \n   */\n  isSize(size: string) { \n    return this.current.size === size;\n  }\n\n  /**\n   * Registers the element to receive descriptor updates.\n   * @param element \n   * @param options {\n   *   width: adds the screen width descriptors,\n   *   orientation: adds the screen orientation\n   * }\n   */\n  sync(element: HTMLElement, options: SyncOptions = { width: true }) { \n    if (!this.elements.has(element)) { \n      this.elements.set(element, options);\n      this.updateElement(element);\n    }\n  }\n  \n  /**\n   * Removes descriptors updates.\n   * @param element \n   */\n  unsync(element: HTMLElement) {\n    this.elements.delete(element);\n    this.clearElement(element);\n  }\n\n  /**\n   * Removes the descriptors on all elements.\n   */\n  clear() { \n    for (const item of this.elements.keys()) { \n      this.updateElement(item);\n    }\n  }\n\n  /**\n   * Removes the descriptors on an element.\n   * @param element \n   */\n  clearElement(element: HTMLElement) { \n\n    // remove sizes\n    for (const size of this.sizes) {\n      this.removeClass(element, `screen-${size}`);\n    }\n\n    // remove orientation\n    this.removeClass(element, Orientation.landscape);\n    this.removeClass(element, Orientation.portrait);\n\n  }\n\n  /**\n   * Updates the descriptors on all elements.\n   */\n  update() {\n    for (const item of this.elements.keys()) { \n      this.updateElement(item);\n    }\n  }\n\n  /**\n   * Updates the descriptors on an element.\n   * @param element \n   */\n  updateElement(element: HTMLElement) { \n\n    const options = this.elements.get(element);\n\n    // update the screen width when it changes\n    if (options?.width) {\n      for (const size of this.sizes) {\n        if (this.current.size === size) {\n          this.addClass(element, `screen-${size}`);\n        } else {\n          this.removeClass(element, `screen-${size}`);\n        }\n      }\n    }\n\n    // update orientation\n    if (options?.orientation) {\n      switch(this.current.orientation) { \n        case Orientation.landscape: \n          this.addClass(element, Orientation.landscape);\n          this.removeClass(element, Orientation.portrait);\n          break;\n        case Orientation.portrait: \n          this.addClass(element, Orientation.portrait);\n          this.removeClass(element, Orientation.landscape);\n          break;\n        default: \n          this.removeClass(element, Orientation.portrait);\n          this.removeClass(element, Orientation.landscape);\n          break;\n      }\n    }\n    \n  }\n\n  /**\n   * Stops the element and children from scrolling.\n   * @param element \n   * @returns \n   */\n  lockScroll(element?: HTMLElement) { \n\n    element = element || document.body as any;\n    \n    if (element) {\n      this.addClass(element, 'no-scroll');\n    }\n\n    return () => { \n      this.removeClass(document.body, 'no-scroll');\n      if (element) {\n        this.removeClass(element, 'no-scroll');\n      }\n    }\n    \n  }\n\n  /**\n   * Adds a descriptor to an element.\n   * @param element \n   * @param attribute \n   * @param value \n   */\n  addAttribute(element: HTMLElement, attribute: string, value = '') {\n    element.setAttribute(attribute, value);\n  }\n\n  /**\n   * Removes a descriptor from an element.\n   * @param element \n   * @param attribute \n   */\n  removeAttribute(element: HTMLElement, attribute: string) { \n    element.removeAttribute(attribute);\n  }\n\n  /**\n   * Adds or removes a descriptor from an element.\n   * @param element \n   * @param attribute \n   * @param visible \n   * @param value \n   */\n  toggleAttribute(element: HTMLElement, attribute: string, visible?: boolean, value = '') { \n    if (visible === undefined) { \n      visible = element.hasAttribute(attribute);\n    }\n    if (visible) { \n      this.addAttribute(element, attribute, value);\n    } else { \n      this.removeAttribute(element, attribute);\n    }\n  }\n\n  /**\n   * Adds a CSS class to the element.\n   * @param element \n   * @param className \n   */\n  addClass(element: HTMLElement, className: string) { \n    if (!element.classList.contains(className)) {\n      element.classList.add(className);\n    }\n  }\n\n  /**\n   * Removes all instances of the CSS class on the element.\n   * @param element \n   * @param className \n   */\n  removeClass(element: HTMLElement, className: string) { \n    while(element.classList.contains(className)) {\n      element.classList.remove(className);\n    }\n  }\n\n  /**\n   * Resolves after the specified time.\n   * @param time\n   * @returns \n   */\n  async wait(time = 1) { \n    return await new Promise(y => setTimeout(() => y(undefined), time));\n  }\n\n}\n\n\n// global reference\nlet screen: Screen = (window as any)?.$screen;\n\nif (!screen) { \n  screen = new Screen();\n  (window as any).$screen = screen;\n\n  // create style\n  const style = document.createElement('style');\n  style.setAttribute('mo-screen', '');\n  style.innerHTML = screen.styles;\n  document.head.appendChild(style);\n\n  screen.init();\n\n}\n\nexport { screen }\n"]}